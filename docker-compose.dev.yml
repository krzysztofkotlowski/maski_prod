version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/migration.sql:/docker-entrypoint-initdb.d/migration.sql

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: mydatabase
      DB_USER: myuser
      DB_PASSWORD: mypassword
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - db
    command: ["start-dev"]



  backend:
    build: ./backend
    depends_on:
      - db
      - keycloak
    environment:
      DATABASE_HOST: db
      DATABASE_USER: myuser
      DATABASE_PASSWORD: mypassword
      DATABASE_NAME: mydatabase
    volumes:
      - ./backend:/app
    ports:
      - "5001:5000"
    networks:
      - app-network
    command: python -m flask run --host=0.0.0.0 --port=5000

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    command: npm start

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/.nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - keycloak
    networks:
      - app-network
    command: ["nginx", "-g", "daemon off;"]

networks:
  app-network:

volumes:
  db-data:
